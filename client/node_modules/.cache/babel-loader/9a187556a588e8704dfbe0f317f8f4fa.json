{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/page/picture-page/picture-page.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPicturesStart } from '../../redux/picture/picture.actions';\nimport WithLoader from '../../components/with-loader/with-loader.component';\nimport PictureDevice from '../../components/picture-devices/picture-devices.component';\nimport PortraitPage from '../portrait-page/portrait.component';\nconst PictureDeviceLoader = WithLoader(PictureDevice);\n\nconst PicturePage = ({\n  history\n}) => {\n  const isLanscape = useSelector(({\n    orientation: {\n      isLanscape\n    }\n  }) => isLanscape);\n  const isFetching = useSelector(({\n    picture: {\n      isFetching\n    }\n  }) => isFetching);\n  const dispatch = useDispatch();\n  const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n  const getPicForDevice = w <= 900 ? 'for-mobiles-900' : w > 900 && w < 1600 ? 'for-big-devices-1200' : 'for-big-devices-1800';\n  useEffect(() => {\n    const asyncFetchPicture = async () => {\n      const pictureFetch = await fetchPicturesStart(history.location.pathname)(getPicForDevice);\n      console.log(123);\n      dispatch(pictureFetch);\n    };\n\n    asyncFetchPicture();\n    return () => {};\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, !isLanscape ? React.createElement(PortraitPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(PictureDeviceLoader, {\n    isFetching: isFetching,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(PicturePage);","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/page/picture-page/picture-page.component.jsx"],"names":["React","useEffect","withRouter","useSelector","useDispatch","fetchPicturesStart","WithLoader","PictureDevice","PortraitPage","PictureDeviceLoader","PicturePage","history","isLanscape","orientation","isFetching","picture","dispatch","w","Math","max","document","documentElement","clientWidth","window","innerWidth","getPicForDevice","asyncFetchPicture","pictureFetch","location","pathname","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,kBAAT,QAAmC,qCAAnC;AAEA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,OAAOC,aAAP,MAA0B,4DAA1B;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,MAAMC,mBAAmB,GAAGH,UAAU,CAACC,aAAD,CAAtC;;AAEA,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAMC,UAAU,GAAGT,WAAW,CAAC,CAAC;AAAEU,IAAAA,WAAW,EAAE;AAAED,MAAAA;AAAF;AAAf,GAAD,KAAqCA,UAAtC,CAA9B;AACA,QAAME,UAAU,GAAGX,WAAW,CAAC,CAAC;AAAEY,IAAAA,OAAO,EAAE;AAAED,MAAAA;AAAF;AAAX,GAAD,KAAiCA,UAAlC,CAA9B;AAEA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC,EAA+CC,MAAM,CAACC,UAAP,IAAqB,CAApE,CAAV;AACA,QAAMC,eAAe,GACjBR,CAAC,IAAI,GAAL,GACM,iBADN,GAEMA,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,IAAf,GACA,sBADA,GAEA,sBALV;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,iBAAiB,GAAG,YAAY;AAClC,YAAMC,YAAY,GAAG,MAAMtB,kBAAkB,CAACM,OAAO,CAACiB,QAAR,CAAiBC,QAAlB,CAAlB,CACvBJ,eADuB,CAA3B;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAf,MAAAA,QAAQ,CAACW,YAAD,CAAR;AACH,KAND;;AAQAD,IAAAA,iBAAiB;AACjB,WAAO,MAAM,CAAE,CAAf;AACH,GAXQ,EAWN,EAXM,CAAT;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACd,UAAD,GAAc,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAAiC,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAEE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,CADJ;AAKH,CA9BD;;AA+BA,eAAeZ,UAAU,CAACQ,WAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchPicturesStart } from '../../redux/picture/picture.actions';\n\nimport WithLoader from '../../components/with-loader/with-loader.component';\nimport PictureDevice from '../../components/picture-devices/picture-devices.component';\n\nimport PortraitPage from '../portrait-page/portrait.component';\n\nconst PictureDeviceLoader = WithLoader(PictureDevice);\n\nconst PicturePage = ({ history }) => {\n    const isLanscape = useSelector(({ orientation: { isLanscape } }) => isLanscape);\n    const isFetching = useSelector(({ picture: { isFetching } }) => isFetching);\n\n    const dispatch = useDispatch();\n    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    const getPicForDevice =\n        w <= 900\n            ? 'for-mobiles-900'\n            : w > 900 && w < 1600\n            ? 'for-big-devices-1200'\n            : 'for-big-devices-1800';\n\n    useEffect(() => {\n        const asyncFetchPicture = async () => {\n            const pictureFetch = await fetchPicturesStart(history.location.pathname)(\n                getPicForDevice\n            );\n            console.log(123);\n            dispatch(pictureFetch);\n        };\n\n        asyncFetchPicture();\n        return () => {};\n    }, []);\n    return (\n        <div>\n            {!isLanscape ? <PortraitPage /> : <PictureDeviceLoader isFetching={isFetching} />}\n        </div>\n    );\n};\nexport default withRouter(PicturePage);\n"]},"metadata":{},"sourceType":"module"}