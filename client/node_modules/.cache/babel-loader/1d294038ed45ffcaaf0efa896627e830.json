{"ast":null,"code":"import _defineProperty from \"/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport OrientationActionTypes from './orientation.types';\nconst INITIAL_STATE = {\n  isLandscape: window.matchMedia('(orientation: portrait)').matches ? false : true\n};\n\nconst orientationReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case OrientationActionTypes.CHANGE_ORIENTATION:\n      return _objectSpread({}, state, {\n        isLandscape: !state.isLandscape\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default orientationReducer;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/redux/orientation/orientation.reducer.js"],"names":["OrientationActionTypes","INITIAL_STATE","isLandscape","window","matchMedia","matches","orientationReducer","state","action","type","CHANGE_ORIENTATION"],"mappings":";;;;;;AAAA,OAAOA,sBAAP,MAAmC,qBAAnC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAEC,MAAM,CAACC,UAAP,CAAkB,yBAAlB,EAA6CC,OAA7C,GAAuD,KAAvD,GAA+D;AAD1D,CAAtB;;AAIA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,sBAAsB,CAACU,kBAA5B;AACI,+BACOH,KADP;AAEIL,QAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAFxB;;AAIJ;AACI,aAAOK,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,kBAAf","sourcesContent":["import OrientationActionTypes from './orientation.types';\n\nconst INITIAL_STATE = {\n    isLandscape: window.matchMedia('(orientation: portrait)').matches ? false : true\n};\n\nconst orientationReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case OrientationActionTypes.CHANGE_ORIENTATION:\n            return {\n                ...state,\n                isLandscape: !state.isLandscape\n            };\n        default:\n            return state;\n    }\n};\n\nexport default orientationReducer;\n"]},"metadata":{},"sourceType":"module"}