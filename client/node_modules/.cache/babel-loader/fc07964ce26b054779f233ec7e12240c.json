{"ast":null,"code":"import { takeLatest, put, call } from 'redux-saga/effects';\nimport { storage, getDownloadPictureURL } from '../../firebase/firebase.utils';\nimport { fetchVideoError, fetchVideoSuccess } from './video-t1.actions';\nimport PictureActionTypes from '../picture/picture.types';\nexport function* fetchVideoAsync() {\n  try {\n    const storageRef = storage.ref();\n    const fileFirebase = storageRef.child('video');\n    const getVideo = yield call(getDownloadPictureURL, fileFirebase);\n    console.log(getVideo);\n    yield put(fetchVideoSuccess(getVideo));\n  } catch (error) {\n    yield put(fetchVideoError(error.message));\n  }\n}\nexport function* fetchVideoStart() {\n  yield takeLatest(PictureActionTypes.FETCH_PICTURES_SUCCESS, fetchVideoAsync);\n}","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/redux/video-t1/video-t1.saga.js"],"names":["takeLatest","put","call","storage","getDownloadPictureURL","fetchVideoError","fetchVideoSuccess","PictureActionTypes","fetchVideoAsync","storageRef","ref","fileFirebase","child","getVideo","console","log","error","message","fetchVideoStart","FETCH_PICTURES_SUCCESS"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AAEA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,+BAA/C;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,oBAAnD;AAEA,OAAOC,kBAAP,MAA+B,0BAA/B;AAEA,OAAO,UAAUC,eAAV,GAA4B;AAC/B,MAAI;AACA,UAAMC,UAAU,GAAGN,OAAO,CAACO,GAAR,EAAnB;AACA,UAAMC,YAAY,GAAGF,UAAU,CAACG,KAAX,CAAiB,OAAjB,CAArB;AACA,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACE,qBAAD,EAAwBO,YAAxB,CAA3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMZ,GAAG,CAACK,iBAAiB,CAACO,QAAD,CAAlB,CAAT;AACH,GAND,CAME,OAAOG,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACI,eAAe,CAACW,KAAK,CAACC,OAAP,CAAhB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,GAA4B;AAC/B,QAAMlB,UAAU,CAACO,kBAAkB,CAACY,sBAApB,EAA4CX,eAA5C,CAAhB;AACH","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects';\n\nimport { storage, getDownloadPictureURL } from '../../firebase/firebase.utils';\n\nimport { fetchVideoError, fetchVideoSuccess } from './video-t1.actions';\n\nimport PictureActionTypes from '../picture/picture.types';\n\nexport function* fetchVideoAsync() {\n    try {\n        const storageRef = storage.ref();\n        const fileFirebase = storageRef.child('video');\n        const getVideo = yield call(getDownloadPictureURL, fileFirebase);\n        console.log(getVideo);\n        yield put(fetchVideoSuccess(getVideo));\n    } catch (error) {\n        yield put(fetchVideoError(error.message));\n    }\n}\n\nexport function* fetchVideoStart() {\n    yield takeLatest(PictureActionTypes.FETCH_PICTURES_SUCCESS, fetchVideoAsync);\n}\n"]},"metadata":{},"sourceType":"module"}