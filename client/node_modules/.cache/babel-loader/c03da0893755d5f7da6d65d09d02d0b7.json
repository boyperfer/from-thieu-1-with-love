{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/page/picture-page/picture-page.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport is from 'is_js';\nimport { selectIsFetching } from '../../redux/picture/picture.selectors';\nimport { selectIsLandscape } from '../../redux/orientation/orientation.selectors';\nimport { fetchPicturesStart } from '../../redux/picture/picture.actions';\nimport WithLoader from '../../components/with-loader/with-loader.component';\nimport Loader from '../../components/loader/loader.component';\nconst PictureDevice = lazy(() => import('../../components/picture-devices/picture-devices.component'));\nconst PortraitPage = lazy(() => import('../../page/portrait-page/portrait.component'));\nconst PictureDeviceLoader = WithLoader(PictureDevice);\n\nconst PicturePage = ({\n  history\n}) => {\n  const isLanscape = useSelector(selectIsLandscape);\n  const isFetching = useSelector(selectIsLandscape);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const isSafari = is.safari() ? '' : '/chrome';\n    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    const getPicForDevice = w <= 900 ? 'for-mobiles-900' : w > 900 && w < 1600 ? 'for-big-devices-1200' : 'for-big-devices-1800';\n    const pictureFetch = fetchPicturesStart(history.location.pathname)(isSafari)(getPicForDevice);\n    dispatch(pictureFetch);\n    return () => {};\n  }, [dispatch, history.location.pathname]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, !isLanscape ? React.createElement(PortraitPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) : React.createElement(PictureDeviceLoader, {\n    isFetching: isFetching,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default withRouter(PicturePage);","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/page/picture-page/picture-page.component.jsx"],"names":["React","useEffect","lazy","Suspense","withRouter","useSelector","useDispatch","is","selectIsFetching","selectIsLandscape","fetchPicturesStart","WithLoader","Loader","PictureDevice","PortraitPage","PictureDeviceLoader","PicturePage","history","isLanscape","isFetching","dispatch","isSafari","safari","w","Math","max","document","documentElement","clientWidth","window","innerWidth","getPicForDevice","pictureFetch","location","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,EAAP,MAAe,OAAf;AAEA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,SAASC,iBAAT,QAAkC,+CAAlC;AAEA,SAASC,kBAAT,QAAmC,qCAAnC;AAEA,OAAOC,UAAP,MAAuB,oDAAvB;AAEA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,MAAMC,aAAa,GAAGX,IAAI,CAAC,MACvB,OAAO,4DAAP,CADsB,CAA1B;AAGA,MAAMY,YAAY,GAAGZ,IAAI,CAAC,MAAM,OAAO,6CAAP,CAAP,CAAzB;AAEA,MAAMa,mBAAmB,GAAGJ,UAAU,CAACE,aAAD,CAAtC;;AAEA,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAMC,UAAU,GAAGb,WAAW,CAACI,iBAAD,CAA9B;AACA,QAAMU,UAAU,GAAGd,WAAW,CAACI,iBAAD,CAA9B;AACA,QAAMW,QAAQ,GAAGd,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,QAAQ,GAAGd,EAAE,CAACe,MAAH,KAAc,EAAd,GAAmB,SAApC;AACA,UAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC,EAA+CC,MAAM,CAACC,UAAP,IAAqB,CAApE,CAAV;AACA,UAAMC,eAAe,GACjBR,CAAC,IAAI,GAAL,GACM,iBADN,GAEMA,CAAC,GAAG,GAAJ,IAAWA,CAAC,GAAG,IAAf,GACA,sBADA,GAEA,sBALV;AAMA,UAAMS,YAAY,GAAGtB,kBAAkB,CAACO,OAAO,CAACgB,QAAR,CAAiBC,QAAlB,CAAlB,CAA8Cb,QAA9C,EACjBU,eADiB,CAArB;AAIAX,IAAAA,QAAQ,CAACY,YAAD,CAAR;AACA,WAAO,MAAM,CAAE,CAAf;AACH,GAfQ,EAeN,CAACZ,QAAD,EAAWH,OAAO,CAACgB,QAAR,CAAiBC,QAA5B,CAfM,CAAT;AAiBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAChB,UAAD,GAAc,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAAiC,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAEC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,CADJ,CADJ;AAOH,CA7BD;;AA8BA,eAAef,UAAU,CAACY,WAAD,CAAzB","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport is from 'is_js';\n\nimport { selectIsFetching } from '../../redux/picture/picture.selectors';\nimport { selectIsLandscape } from '../../redux/orientation/orientation.selectors';\n\nimport { fetchPicturesStart } from '../../redux/picture/picture.actions';\n\nimport WithLoader from '../../components/with-loader/with-loader.component';\n\nimport Loader from '../../components/loader/loader.component';\n\nconst PictureDevice = lazy(() =>\n    import('../../components/picture-devices/picture-devices.component')\n);\nconst PortraitPage = lazy(() => import('../../page/portrait-page/portrait.component'));\n\nconst PictureDeviceLoader = WithLoader(PictureDevice);\n\nconst PicturePage = ({ history }) => {\n    const isLanscape = useSelector(selectIsLandscape);\n    const isFetching = useSelector(selectIsLandscape);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const isSafari = is.safari() ? '' : '/chrome';\n        const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n        const getPicForDevice =\n            w <= 900\n                ? 'for-mobiles-900'\n                : w > 900 && w < 1600\n                ? 'for-big-devices-1200'\n                : 'for-big-devices-1800';\n        const pictureFetch = fetchPicturesStart(history.location.pathname)(isSafari)(\n            getPicForDevice\n        );\n\n        dispatch(pictureFetch);\n        return () => {};\n    }, [dispatch, history.location.pathname]);\n\n    return (\n        <div>\n            <Suspense fallback={<Loader />}>\n                {!isLanscape ? <PortraitPage /> : <PictureDeviceLoader isFetching={isFetching} />}\n            </Suspense>\n        </div>\n    );\n};\nexport default withRouter(PicturePage);\n"]},"metadata":{},"sourceType":"module"}