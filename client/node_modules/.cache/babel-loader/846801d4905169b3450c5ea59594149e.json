{"ast":null,"code":"import _defineProperty from \"/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport VideoActionTypes from './video-t1.types';\nconst INITIAL_STATE = {\n  isFetching: false,\n  getLink: '',\n  message: ''\n};\n\nconst videoReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case VideoActionTypes.FETCH_VIDEO_START:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case VideoActionTypes.FETCH_VIDEO_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        getLink: action.payload\n      });\n\n    case VideoActionTypes.FETCH_VIDEO_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        message: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default videoReducer;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/from-thieu-1-with-love/client/src/redux/video-t1/video-t1.reducer.js"],"names":["VideoActionTypes","INITIAL_STATE","isFetching","getLink","message","videoReducer","state","action","type","FETCH_VIDEO_START","FETCH_VIDEO_SUCCESS","payload","FETCH_VIDEO_FAILURE"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,kBAA7B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,OAAO,EAAE,EAFS;AAGlBC,EAAAA,OAAO,EAAE;AAHS,CAAtB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,gBAAgB,CAACS,iBAAtB;AACI,+BACOH,KADP;AAEIJ,QAAAA,UAAU,EAAE;AAFhB;;AAIJ,SAAKF,gBAAgB,CAACU,mBAAtB;AACI,+BACOJ,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,OAAO,EAAEI,MAAM,CAACI;AAHpB;;AAKJ,SAAKX,gBAAgB,CAACY,mBAAtB;AACI,+BACON,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIE,QAAAA,OAAO,EAAEG,MAAM,CAACI;AAHpB;;AAKJ;AACI,aAAOL,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,YAAf","sourcesContent":["import VideoActionTypes from './video-t1.types';\n\nconst INITIAL_STATE = {\n    isFetching: false,\n    getLink: '',\n    message: ''\n};\n\nconst videoReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case VideoActionTypes.FETCH_VIDEO_START:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case VideoActionTypes.FETCH_VIDEO_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                getLink: action.payload\n            };\n        case VideoActionTypes.FETCH_VIDEO_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                message: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default videoReducer;\n"]},"metadata":{},"sourceType":"module"}